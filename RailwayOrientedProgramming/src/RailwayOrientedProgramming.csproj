<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <PackageReadmeFile>README.md</PackageReadmeFile>
  </PropertyGroup>
  <ItemGroup>
    <None Include="../README.md" Pack="true" PackagePath="\" />
  </ItemGroup>

  <!-- T4 build support for .NET Core (Begin) -->

  <ItemGroup Condition="'$(MSBuildRuntimeType)'=='Core'">
    <DotNetCliToolReference Include="T5.TextTransform.Tool" Version="1.1.0-*" />
    <TextTemplate Include="**\*.Generated.tt" />
    <Generated Include="**\*.Generated.cs" />
  </ItemGroup>

  <Target Name="TextTemplateTransform" BeforeTargets="BeforeBuild" Condition="'$(MSBuildRuntimeType)'=='Core'">
    <ItemGroup>
      <Compile Remove="**\*.cs" />
    </ItemGroup>
    <Exec WorkingDirectory="$(ProjectDir)" Command="dotnet tt %(TextTemplate.Identity)" />
    <ItemGroup>
      <Compile Include="**\*.cs" />
    </ItemGroup>
  </Target>

  <Target Name="TextTemplateClean" AfterTargets="Clean">
    <Delete Files="@(Generated)" />
  </Target>

  <!-- T4 build support for .NET Core (End) -->


  <!-- T4 build support for Visual Studio (Begin) -->

  <PropertyGroup Condition="'$(MSBuildRuntimeType)'=='Full'">
    <VSToolsPath Condition="'$(VSToolsPath)' == ''">$(MSBuildExtensionsPath32)\Microsoft\VisualStudio\v$(VisualStudioVersion)</VSToolsPath>
    <!-- This is what will cause the templates to be transformed when the project is built (default is false) -->
    <TransformOnBuild>true</TransformOnBuild>
    <!-- Set to true to force overwriting of read-only output files, e.g. if they're not checked out (default is false) -->
    <OverwriteReadOnlyOutputFiles>true</OverwriteReadOnlyOutputFiles>
    <!-- Set to false to transform files even if the output appears to be up-to-date (default is true)  -->
    <TransformOutOfDateOnly>false</TransformOutOfDateOnly>
  </PropertyGroup>

  <Import Project="Sdk.targets" Sdk="Microsoft.NET.Sdk" Condition="'$(MSBuildRuntimeType)'=='Full'" />
  <Import Project="$(VSToolsPath)\TextTemplating\Microsoft.TextTemplating.targets" Condition="'$(MSBuildRuntimeType)'=='Full'" />

  <!-- T4 build support for Visual Studio (End) -->
  
  <ItemGroup>
    <Compile Update="Result\Extensions\Ensure.ValueTask.cs">
      <DependentUpon>Ensure.cs</DependentUpon>
    </Compile>
    <Compile Update="Result\Extensions\Ensure.ValueTask.Left.cs">
      <DependentUpon>Ensure.ValueTask.cs</DependentUpon>
    </Compile>
    <Compile Update="Result\Extensions\Ensure.ValueTask.Right.cs">
      <DependentUpon>Ensure.ValueTask.cs</DependentUpon>
    </Compile>
    <Compile Update="Result\Extensions\BindTs.g.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>BindTs.tt</DependentUpon>
    </Compile>
    <Compile Update="Result\Extensions\CombineTs.g.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>CombineTs.tt</DependentUpon>
    </Compile>

    <Compile Update="Result\Extensions\Ensure.Task.cs" DependentUpon="Ensure.cs" />

    <Compile Update="Result\Extensions\MapTs.g.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>MapTs.tt</DependentUpon>
    </Compile>

    <Compile Update="Result\Extensions\ParallelAsyncs.g.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>ParallelAsyncs.tt</DependentUpon>
    </Compile>
    <Compile Update="Result\Extensions\Ensure.Task.*.cs" DependentUpon="Ensure.Task.cs" />
  </ItemGroup>

  <ItemGroup>
    <None Update="Result\Extensions\BindTs.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>BindTs.g.cs</LastGenOutput>
    </None>
    <None Update="Result\Extensions\CombineTs.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>CombineTs.g.cs</LastGenOutput>
      <DependentUpon>Combine.cs</DependentUpon>
    </None>
    <None Update="Result\Extensions\MapTs.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>MapTs.g.cs</LastGenOutput>
      <DependentUpon>Map.cs</DependentUpon>
    </None>
    <None Update="Result\Extensions\ParallelAsyncs.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>ParallelAsyncs.g.cs</LastGenOutput>
    </None>
  </ItemGroup>

  <ItemGroup>
    <Service Include="{508349b6-6b84-4df5-91f0-309beebad82d}" />
  </ItemGroup>
</Project>
