<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
<#@ include file="CommonFunction.t4" #>

// Generated code
namespace FunctionalDDD;

public static partial class ResultExtensions
{

<#
  void WriteArgs(int n) {
     Write(String.Join(", ", Enumerable.Range(1, n).Select(i => "args" + i)));
  }

  for(var i = 2; i <=9; i++) { 
#>

    /// <summary>
    ///     Selects result from the return value of a given function. If the calling Result is a failure, a new failure result is returned instead.
    /// </summary>
    public static Result<TResult, Error> OnOk<<# WriteTs(i); #>, TResult>(
        this Result<(<# WriteTs(i); #>), Error> result
        , Func<<# WriteTs(i); #>, Result<TResult, Error>> func)
    {
        if (result.IsError)
            return Result.Failure<TResult>(result.Error);

        var (<# WriteArgs(i); #>) = result.Ok;
        return func(<# WriteArgs(i); #>);
    }

<#
 }
#>

}
