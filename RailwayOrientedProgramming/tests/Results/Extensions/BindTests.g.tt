<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>

namespace RailwayOrientedProgramming.Tests.Results.Extensions
{
    public partial class BindTests : TestBase
    {
<#
    void WriteNums(int n) {
        Write(String.Join(", ", Enumerable.Range(1, n).Select(i => 40 + i)));
    }

    void WriteParamNums(int n) {
        Write(String.Join(", ", Enumerable.Range(1, n).Select(i => "num" + i)));
    }

    void WriteStrNums(int n) {
        Write(String.Join(" ", Enumerable.Range(1, n).Select(i => "{num" + i + "}")));
    }

    void WriteAssertNums(int n) {
        Write(String.Join(" ", Enumerable.Range(1, n).Select(i => 40 + i)));
    }

	for (var i = 1; i < 9; i++)
	{
#>

        [Fact]
        public void Bind_With<#=i#>Parameters_ShouldReturnResult()
        {
            // Arrange
            var result = Result.Success(("Hello", <#WriteNums(i);#>));

            // Act
            var actual = result.Bind((str, <#WriteParamNums(i);#>) => Result.Success($"{str} <#WriteStrNums(i);#>"));

            // Assert
            actual.IsSuccess.Should().BeTrue();
            actual.Value.Should().Be("Hello <#WriteAssertNums(i);#>");
        }
<#
    }
#>
    }
}
