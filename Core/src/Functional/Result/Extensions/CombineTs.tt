<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
<#@ include file="CommonFunction.t4" #>
// Generated code
namespace FunctionalDDD;

public static partial class ResultExtensions
{

<#
  void WriteT1Values(int n) {
     Write(String.Join(", ", Enumerable.Range(1, n).Select(i => "t1.Value.Item" + i)));
  }

  for(var i = 3; i <=9; i++) { 
#>
    public static Result<(<# WriteTs(i); #>)> Combine<<# WriteTs(i); #>>(this Result<(<# WriteTs(i - 1); #>)> t1, Result<<# Write("T" + i); #>> tc)
    {
        if (t1.IsFailure || tc.IsFailure)
        {
            var errors = new ErrorList();
            if (t1.IsFailure)
                errors.AddRange(t1.Errors);
            if (tc.IsFailure)
                errors.AddRange(tc.Errors);
            return Result.Failure<(<# WriteTs(i); #>)>(errors);
        }

        return Result.Success((<# WriteT1Values(i - 1); #>, tc.Value));
    }

<#
 }
#>

}